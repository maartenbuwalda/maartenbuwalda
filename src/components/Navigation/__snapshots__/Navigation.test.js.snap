// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation component mounts correctly 1`] = `
.c1 {
  width: 100%;
  color: rgba(0,0,0,0.8);
  overflow: hidden;
  -webkit-transition: all 1s;
  transition: all 1s;
  color: rgba(255,255,255,0.8);
}

.c2 {
  -webkit-transition: all .3s;
  transition: all .3s;
}

.c2 .colored {
  -webkit-transition: background-color .3s,color .3s;
  transition: background-color .3s,color .3s;
}

.c2 h1,
.c2 h2,
.c2 h3 {
  -webkit-transition: color 1s;
  transition: color 1s;
}

.c2 a {
  -webkit-transition: color 1s;
  transition: color 1s;
  color: rgba(255,255,255,0.8);
}

.c2 a:hover,
.c2 a.active {
  -webkit-transition: color .3s;
  transition: color .3s;
}

.c13 {
  padding: 0 1.5rem;
  overflow: hidden;
  opacity: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: background-color 1s,opacity .6s,max-height .6s,padding .6s;
  transition: background-color 1s,opacity .6s,max-height .6s,padding .6s;
  max-height: 0;
  background-color: rgba(,0.2);
}

.c13 a {
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  padding: .5rem 1rem .5rem;
  font-size: 1rem;
  color: #A8A8A8;
}

.c11 {
  display: none;
}

.c11:checked + .c12 {
  opacity: 1;
  max-height: 20rem;
  padding: 1rem 1.5rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 1rem;
  width: 2rem;
  height: 2rem;
}

.c6 svg {
  width: 100%;
  height: 100%;
  fill: rgba(255,255,255,0.8);
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.c6 svg path[data-appear=true] {
  -webkit-transform: scaleY(1);
  -ms-transform: scaleY(1);
  transform: scaleY(1);
  opacity: 1;
}

.c0 {
  box-shadow: 0 1px 3px rgba(0,0,0,0.1),0 1px 2px rgba(0,0,0,0.1);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c10 {
  -webkit-transition: all .3s;
  transition: all .3s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  background-color: #E5E5E8;
  -webkit-transform: translateX(-4rem) scaleX(0);
  -ms-transform: translateX(-4rem) scaleX(0);
  transform: translateX(-4rem) scaleX(0);
}

.c7 {
  background: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 .main-link {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: all .3s;
  transition: all .3s;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  font-size: 1rem;
  width: 100%;
  padding: 0 .5rem;
  color: #A8A8A8;
  -webkit-transition: all .3s;
  transition: all .3s;
}

.c7 .main-link > span {
  -webkit-transition: -webkit-transform .3s;
  -webkit-transition: transform .3s;
  transition: transform .3s;
  -webkit-transform: translateX(-3rem);
  -ms-transform: translateX(-3rem);
  transform: translateX(-3rem);
}

.c7 .main-link.active > span {
  -webkit-transform: translateX(0rem);
  -ms-transform: translateX(0rem);
  transform: translateX(0rem);
}

.c7 .main-link.active > .c9 {
  -webkit-transform: translateX(-1rem);
  -ms-transform: translateX(-1rem);
  transform: translateX(-1rem);
}

.c5 > span {
  overflow: initial;
  font-size: 2rem;
  padding: 1rem;
}

.c8 {
  background: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: fixed;
  top: 0;
  min-height: 100vh;
  -webkit-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  transform: translateX(-100%);
  width: 100vw;
  -webkit-transition: all .3s;
  transition: all .3s;
  opacity: 0;
  z-index: -1;
}

.c8 .c4 {
  color: #A8A8A8;
  text-align: right;
}

@media (min-width:768px) {
  .c13 a {
    font-size: 1.2rem;
  }
}

@media (min-width:768px) {
  .c0 {
    box-shadow: none;
  }
}

@media (min-width:768px) {
  .c3 {
    display: none;
  }
}

@media (min-width:768px) {
  .c10 {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
}

@media (min-width:768px) {
  .c7 {
    padding: 0;
    position: initial;
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
    box-shadow: none;
  }
}

@media (min-width:768px) {
  .c7 .main-link {
    padding: .5rem 1rem;
    font-size: 1.2rem;
  }
}

@media (min-width:768px) {
  .c5 {
    display: none;
  }
}

@media (min-width:768px) {
  .c8 {
    width: 100%;
    -webkit-transform: initial;
    -ms-transform: initial;
    transform: initial;
    min-height: initial;
    height: initial;
    position: initial;
    opacity: initial;
    z-index: initial;
    box-shadow: none;
  }
}

<HashRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Navigation>
      <Styled(Card)
        background="colored"
      >
        <StyledComponent
          background="colored"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gqjmRU",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "
  box-shadow: ",
                  "0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.1)",
                  ";

  @media (min-width: ",
                  "768px",
                  ") {
    box-shadow: none;
  }
",
                ],
              },
              "displayName": "Styled(Card)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gqjmRU",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <Card
            background="colored"
            className="c0"
            content=""
          >
            <styled.article
              background="colored"
              className="c0"
              content=""
              theme={
                Object {
                  "hex": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                  "rgb": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                }
              }
            >
              <StyledComponent
                background="colored"
                className="c0"
                content=""
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  grid-area: ",
                        [Function],
                        ";
  width: 100%;
  color: ",
                        "rgba(0, 0, 0, 0.8)",
                        ";
  overflow: hidden;
  transition: all 1s;
  color: ",
                        [Function],
                        ";
  background-color: ",
                        [Function],
                        ";
",
                      ],
                    },
                    "displayName": "styled.article",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "article",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                theme={
                  Object {
                    "hex": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                    "rgb": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                  }
                }
              >
                <article
                  className="c0 c1"
                  content=""
                >
                  <styled.main
                    background="colored"
                    className="c0"
                    content=""
                    theme={
                      Object {
                        "hex": Object {
                          "colorDark": "",
                          "colorLight": "",
                          "colorMutedDark": "",
                          "colorMutedLight": "",
                          "colorMutedRegular": "",
                          "colorRegular": "",
                        },
                        "rgb": Object {
                          "colorDark": "",
                          "colorLight": "",
                          "colorMutedDark": "",
                          "colorMutedLight": "",
                          "colorMutedRegular": "",
                          "colorRegular": "",
                        },
                      }
                    }
                  >
                    <StyledComponent
                      background="colored"
                      className="c0"
                      content=""
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              "
  transition: all .3s;

  .colored {
    transition: background-color .3s, color .3s;
    color: ",
                              [Function],
                              ";
    background-color: ",
                              [Function],
                              ";
  }

  h1, h2, h3 {
    transition: color 1s;
    color: ",
                              [Function],
                              ";
  }

  a {
    transition: color 1s;
    color: ",
                              [Function],
                              "
  }

  a:hover, a.active {
    transition: color .3s;
    color: ",
                              [Function],
                              ";
  };
",
                            ],
                          },
                          "displayName": "styled.main",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "main",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      theme={
                        Object {
                          "hex": Object {
                            "colorDark": "",
                            "colorLight": "",
                            "colorMutedDark": "",
                            "colorMutedLight": "",
                            "colorMutedRegular": "",
                            "colorRegular": "",
                          },
                          "rgb": Object {
                            "colorDark": "",
                            "colorLight": "",
                            "colorMutedDark": "",
                            "colorMutedLight": "",
                            "colorMutedRegular": "",
                            "colorRegular": "",
                          },
                        }
                      }
                    >
                      <main
                        className="c0 c2"
                        content=""
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-VigVT",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  display: flex;
  justify-content: space-between;

  @media (min-width: ",
                                    "768px",
                                    ") {
    display: none;
  }
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-VigVT",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              <styled.label
                                data-test-id="open-menu-button"
                                onClick={[Function]}
                              >
                                <StyledComponent
                                  data-test-id="open-menu-button"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "c4",
                                        "isStatic": true,
                                        "lastClassName": "c5",
                                        "rules": Array [
                                          "
  > span {
    overflow: initial;
    font-size: 2rem;
    padding: 1rem;
  }
  
  @media (min-width: ",
                                          "768px",
                                          ") {
    display: none;
  }
",
                                        ],
                                      },
                                      "displayName": "styled.label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "c4",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onClick={[Function]}
                                >
                                  <label
                                    className="c4 c5"
                                    data-test-id="open-menu-button"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(Icon)>
                                      <Icon
                                        classes={
                                          Object {
                                            "colorAction": "MuiIcon-colorAction-4",
                                            "colorDisabled": "MuiIcon-colorDisabled-6",
                                            "colorError": "MuiIcon-colorError-5",
                                            "colorPrimary": "MuiIcon-colorPrimary-2",
                                            "colorSecondary": "MuiIcon-colorSecondary-3",
                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                            "root": "MuiIcon-root-1",
                                          }
                                        }
                                        color="inherit"
                                        component="span"
                                        fontSize="default"
                                      >
                                        <span
                                          aria-hidden="true"
                                          className="material-icons MuiIcon-root-1"
                                        >
                                          menu
                                        </span>
                                      </Icon>
                                    </WithStyles(Icon)>
                                  </label>
                                </StyledComponent>
                              </styled.label>
                              <Logo
                                size="2rem"
                                white={true}
                              >
                                <styled.div
                                  size="2rem"
                                  theme={
                                    Object {
                                      "hex": Object {
                                        "colorDark": "",
                                        "colorLight": "",
                                        "colorMutedDark": "",
                                        "colorMutedLight": "",
                                        "colorMutedRegular": "",
                                        "colorRegular": "",
                                      },
                                      "rgb": Object {
                                        "colorDark": "",
                                        "colorLight": "",
                                        "colorMutedDark": "",
                                        "colorMutedLight": "",
                                        "colorMutedRegular": "",
                                        "colorRegular": "",
                                      },
                                    }
                                  }
                                  white={true}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-ifAKCX",
                                          "isStatic": false,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  width: ",
                                            [Function],
                                            ";
  height: ",
                                            [Function],
                                            ";

  svg {
    width: 100%;
    height: 100%;
    fill: ",
                                            [Function],
                                            ";
    transition: fill .3s;

    path {
      /* transition: all .3s;
      opacity: ",
                                            [Function],
                                            ";
      transform: scaleY(0.9); */

      &[data-appear=true] {
        transform: scaleY(1);
        opacity: 1;
      }
    }
  }
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-ifAKCX",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    size="2rem"
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                    white={true}
                                  >
                                    <div
                                      className="c6"
                                      size="2rem"
                                    >
                                      <svg
                                        preserveAspectRatio="xMidYMid meet"
                                        version="1.0"
                                        viewBox="0 0 509.000000 509.000000"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <g
                                          stroke="none"
                                          transform="translate(0.000000,509.000000) scale(0.100000,-0.100000)"
                                        >
                                          <path
                                            d="M2065 4954 c-269 -73 -507 -138 -527 -144 l-38 -11 0 -554 0 -555 150 0 150 0 0 435 c0 239 2 435 4 435 2 0 137 36 299 80 162 44 298 80 301 80 3 0 6 -49 6 -110 l0 -110 150 0 150 0 0 110 c0 61 3 110 8 110 7 0 381 -104 505 -141 l67 -20 0 -434 0 -435 150 0 150 0 0 554 c0 520 -1 555 -17 560 -150 45 -1005 286 -1010 285 -5 -1 -228 -61 -498 -135z"
                                          />
                                          <path
                                            d="M700 3585 l0 -805 150 0 150 0 0 655 0 655 195 0 195 0 0 150 0 150 -345 0 -345 0 0 -805z"
                                          />
                                          <path
                                            d="M1910 4240 l0 -150 635 0 635 0 0 150 0 150 -635 0 -635 0 0 -150z"
                                          />
                                          <path
                                            d="M3700 4240 l0 -150 200 0 200 0 0 -655 0 -655 150 0 150 0 0 805 0 805 -350 0 -350 0 0 -150z"
                                          />
                                          <path
                                            d="M2410 3835 l0 -145 150 0 150 0 0 145 0 145 -150 0 -150 0 0 -145z"
                                          />
                                          <path
                                            d="M287 3573 c-2 -5 -68 -242 -147 -527 l-142 -519 144 -516 145 -516 151 -3 152 -3 0 150 0 150 -32 3 -32 3 -78 280 c-43 154 -78 283 -78 288 0 4 230 7 510 7 l510 0 0 150 0 150 -514 2 -513 3 82 300 82 300 32 3 31 3 0 150 0 149 -149 0 c-83 0 -152 -3 -154 -7z"
                                          />
                                          <path
                                            d="M1110 3430 l0 -150 140 0 140 0 0 150 0 150 -140 0 -140 0 0 -150z"
                                          />
                                          <path
                                            d="M1500 2740 l0 -840 150 0 150 0 0 690 0 690 305 0 305 0 0 -690 0 -690 150 0 150 0 0 685 0 685 290 0 290 0 0 -685 0 -685 150 0 150 0 0 840 0 840 -1045 0 -1045 0 0 -840z"
                                          />
                                          <path
                                            d="M3700 3425 l0 -155 145 0 145 0 0 155 0 155 -145 0 -145 0 0 -155z"
                                          />
                                          <path
                                            d="M4510 3430 l0 -150 24 0 c25 0 14 34 184 -592 4 -17 -25 -18 -507 -18 l-511 0 0 -150 0 -150 510 0 c281 0 510 -3 510 -8 0 -4 -36 -133 -80 -287 -44 -154 -80 -281 -80 -282 0 -2 -11 -3 -25 -3 l-25 0 0 -150 0 -150 145 0 144 0 10 38 c6 20 71 250 145 510 l134 473 -139 517 c-77 284 -142 525 -145 535 -5 15 -21 17 -150 17 l-144 0 0 -150z"
                                          />
                                          <path
                                            d="M700 1470 l0 -790 345 0 345 0 0 155 0 155 -195 0 -195 0 0 635 0 635 -150 0 -150 0 0 -790z"
                                          />
                                          <path
                                            d="M4100 1625 l0 -635 -200 0 -200 0 0 -150 0 -150 350 0 350 0 0 785 0 785 -150 0 -150 0 0 -635z"
                                          />
                                          <path
                                            d="M1110 1640 l0 -150 268 0 c147 0 439 -3 650 -7 l382 -6 0 -189 0 -188 150 0 150 0 0 188 0 189 362 6 c199 4 487 7 640 7 l278 0 0 150 0 150 -1440 0 -1440 0 0 -150z"
                                          />
                                          <path
                                            d="M1502 833 l3 -546 524 -144 524 -144 516 144 516 145 3 546 2 546 -150 0 -150 0 0 -425 0 -424 -67 -20 c-108 -32 -501 -141 -507 -141 -4 0 -6 47 -6 105 l0 105 -150 0 -149 0 -3 -108 -3 -109 -265 73 c-146 40 -282 78 -302 84 l-38 11 0 424 0 425 -150 0 -150 0 2 -547z"
                                          />
                                          <path
                                            d="M1910 835 l0 -155 635 0 635 0 0 155 0 155 -635 0 -635 0 0 -155z"
                                          />
                                        </g>
                                      </svg>
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </Logo>
                            </div>
                          </StyledComponent>
                        </styled.div>
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-fjdhpX",
                                  "isStatic": true,
                                  "lastClassName": "c7",
                                  "rules": Array [
                                    "
  background: ",
                                    "#ffffff",
                                    ";

  @media (min-width: ",
                                    "768px",
                                    ") {
    padding: 0;
    position: initial;
    justify-content: flex-start;
    align-items: flex-start;
    box-shadow: none;
  }

  display: flex;
  flex-direction: column;
  
  .main-link {
    display: flex;
    align-items: center;
    transition: all .3s;
    text-decoration: none;
    margin: 0;
    font-size: 1rem;
    width: 100%;
    padding: 0 .5rem;
    color: ",
                                    "#A8A8A8",
                                    ";

    @media (min-width: ",
                                    "768px",
                                    ") {
      padding: .5rem 1rem;
      font-size: 1.2rem;
    }

    > span {
      transition: transform .3s;
      transform: translateX(-3rem);
    }

    transition: all .3s;

    &.active {
      > span {
        transform: translateX(0rem);
      }

      > ",
                                    ".c9",
                                    " {
        transform: translateX(-1rem);
      }
    }
  }
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-fjdhpX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c7"
                            >
                              <styled.nav
                                isToggled={false}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cSHVUG",
                                        "isStatic": false,
                                        "lastClassName": "c8",
                                        "rules": Array [
                                          "
  background: ",
                                          "#ffffff",
                                          ";
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  min-height: 100vh;
  transform: translateX(-100%);
  width: 100vw;
  transition: all .3s;
  opacity: 0;
  z-index: -1;

  @media (max-width: ",
                                          "768px",
                                          ") {
    ",
                                          [Function],
                                          "
  }

  @media (min-width: ",
                                          "768px",
                                          ") {
    width: 100%;
    transform: initial;
    min-height: initial;
    height: initial;
    position: initial;
    opacity: initial;
    z-index: initial;
    box-shadow: none;
  }

  ",
                                          ".c4",
                                          " {
    color: ",
                                          "#A8A8A8",
                                          ";
    text-align: right;
  }
",
                                        ],
                                      },
                                      "displayName": "styled.nav",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cSHVUG",
                                      "target": "nav",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  isToggled={false}
                                >
                                  <nav
                                    className="c8"
                                  >
                                    <styled.label
                                      data-test-id="close-menu-button"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        data-test-id="close-menu-button"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "c4",
                                              "isStatic": true,
                                              "lastClassName": "c5",
                                              "rules": Array [
                                                "
  > span {
    overflow: initial;
    font-size: 2rem;
    padding: 1rem;
  }
  
  @media (min-width: ",
                                                "768px",
                                                ") {
    display: none;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "c4",
                                            "target": "label",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <label
                                          className="c4 c5"
                                          data-test-id="close-menu-button"
                                          onClick={[Function]}
                                        >
                                          <WithStyles(Icon)>
                                            <Icon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiIcon-colorAction-4",
                                                  "colorDisabled": "MuiIcon-colorDisabled-6",
                                                  "colorError": "MuiIcon-colorError-5",
                                                  "colorPrimary": "MuiIcon-colorPrimary-2",
                                                  "colorSecondary": "MuiIcon-colorSecondary-3",
                                                  "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                  "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                  "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                  "root": "MuiIcon-root-1",
                                                }
                                              }
                                              color="inherit"
                                              component="span"
                                              fontSize="default"
                                            >
                                              <span
                                                aria-hidden="true"
                                                className="material-icons MuiIcon-root-1"
                                              >
                                                close
                                              </span>
                                            </Icon>
                                          </WithStyles(Icon)>
                                        </label>
                                      </StyledComponent>
                                    </styled.label>
                                    <div
                                      key="0"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="main-link"
                                        data-test-id="main-menu-item-0"
                                        exact={true}
                                        onClick={[Function]}
                                        to="/"
                                      >
                                        <Route
                                          exact={true}
                                          path="\\\\/"
                                        >
                                          <Link
                                            aria-current="page"
                                            className="main-link active"
                                            data-test-id="main-menu-item-0"
                                            onClick={[Function]}
                                            replace={false}
                                            style={Object {}}
                                            to="/"
                                          >
                                            <a
                                              aria-current="page"
                                              className="main-link active"
                                              data-test-id="main-menu-item-0"
                                              href="#/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "c9",
                                                        "isStatic": true,
                                                        "lastClassName": "c10",
                                                        "rules": Array [
                                                          "
  transition: all .3s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  background-color: ",
                                                          "#E5E5E8",
                                                          ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                                          "768px",
                                                          ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "c9",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="c9 c10"
                                                  >
                                                    <WithStyles(Icon)>
                                                      <Icon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiIcon-colorAction-4",
                                                            "colorDisabled": "MuiIcon-colorDisabled-6",
                                                            "colorError": "MuiIcon-colorError-5",
                                                            "colorPrimary": "MuiIcon-colorPrimary-2",
                                                            "colorSecondary": "MuiIcon-colorSecondary-3",
                                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                            "root": "MuiIcon-root-1",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="span"
                                                        fontSize="default"
                                                      >
                                                        <span
                                                          aria-hidden="true"
                                                          className="material-icons MuiIcon-root-1"
                                                        >
                                                          face
                                                        </span>
                                                      </Icon>
                                                    </WithStyles(Icon)>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <span>
                                                About me
                                              </span>
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </div>
                                    <div
                                      key="1"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="main-link"
                                        data-test-id="main-menu-item-1"
                                        exact={false}
                                        onClick={[Function]}
                                        to="/education"
                                      >
                                        <Route
                                          exact={false}
                                          path="\\\\/education"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="main-link"
                                            data-test-id="main-menu-item-1"
                                            onClick={[Function]}
                                            replace={false}
                                            to="/education"
                                          >
                                            <a
                                              aria-current={null}
                                              className="main-link"
                                              data-test-id="main-menu-item-1"
                                              href="#/education"
                                              onClick={[Function]}
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "c9",
                                                        "isStatic": true,
                                                        "lastClassName": "c10",
                                                        "rules": Array [
                                                          "
  transition: all .3s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  background-color: ",
                                                          "#E5E5E8",
                                                          ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                                          "768px",
                                                          ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "c9",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="c9 c10"
                                                  >
                                                    <WithStyles(Icon)>
                                                      <Icon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiIcon-colorAction-4",
                                                            "colorDisabled": "MuiIcon-colorDisabled-6",
                                                            "colorError": "MuiIcon-colorError-5",
                                                            "colorPrimary": "MuiIcon-colorPrimary-2",
                                                            "colorSecondary": "MuiIcon-colorSecondary-3",
                                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                            "root": "MuiIcon-root-1",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="span"
                                                        fontSize="default"
                                                      >
                                                        <span
                                                          aria-hidden="true"
                                                          className="material-icons MuiIcon-root-1"
                                                        >
                                                          book
                                                        </span>
                                                      </Icon>
                                                    </WithStyles(Icon)>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <span>
                                                Education
                                              </span>
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </div>
                                    <div
                                      key="2"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="main-link"
                                        data-test-id="main-menu-item-2"
                                        exact={false}
                                        onClick={[Function]}
                                        to="/work"
                                      >
                                        <Route
                                          exact={false}
                                          path="\\\\/work"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="main-link"
                                            data-test-id="main-menu-item-2"
                                            onClick={[Function]}
                                            replace={false}
                                            to="/work"
                                          >
                                            <a
                                              aria-current={null}
                                              className="main-link"
                                              data-test-id="main-menu-item-2"
                                              href="#/work"
                                              onClick={[Function]}
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "c9",
                                                        "isStatic": true,
                                                        "lastClassName": "c10",
                                                        "rules": Array [
                                                          "
  transition: all .3s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  background-color: ",
                                                          "#E5E5E8",
                                                          ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                                          "768px",
                                                          ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "c9",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="c9 c10"
                                                  >
                                                    <WithStyles(Icon)>
                                                      <Icon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiIcon-colorAction-4",
                                                            "colorDisabled": "MuiIcon-colorDisabled-6",
                                                            "colorError": "MuiIcon-colorError-5",
                                                            "colorPrimary": "MuiIcon-colorPrimary-2",
                                                            "colorSecondary": "MuiIcon-colorSecondary-3",
                                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                            "root": "MuiIcon-root-1",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="span"
                                                        fontSize="default"
                                                      >
                                                        <span
                                                          aria-hidden="true"
                                                          className="material-icons MuiIcon-root-1"
                                                        >
                                                          code
                                                        </span>
                                                      </Icon>
                                                    </WithStyles(Icon)>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <span>
                                                Work
                                              </span>
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                      <SubNavigation
                                        isToggled={false}
                                        links={
                                          Array [
                                            Object {
                                              "content": undefined,
                                              "image": undefined,
                                              "label": "2019: Fontem Ventures",
                                              "pathname": "/work/fontem-ventures",
                                              "title": "Fontem Ventures",
                                            },
                                            Object {
                                              "content": undefined,
                                              "image": undefined,
                                              "label": "2019: Battlefield Bus Tours",
                                              "pathname": "/work/battlefield-bus-tours",
                                              "title": "Battlefield Bus Tours",
                                            },
                                            Object {
                                              "content": <React.Fragment>
                                                <section>
                                                  <h2>
                                                    Transavia
                                                  </h2>
                                                  <p>
                                                    Transavia was my first project as an external developer. I started working on a new application called the "Group Offer Solution", which is meant to automate the group booking feature of the website. Next to that, I had a big role in setting up two new applications and a component library. Of course part of the job was also to fix bugs in the existing website (transavia.com).
                                                  </p>
                                                </section>
                                                <section>
                                                  <CenteredBlocks>
                                                    <Skill
                                                      name="react"
                                                    >
                                                      Built multiple React applications.
                                                    </Skill>
                                                    <Skill
                                                      name="redux"
                                                    >
                                                      Implemented Redux in existing and new applications.
                                                    </Skill>
                                                    <Skill
                                                      name="jest"
                                                    >
                                                      Increased the code coverage of an existing application from 0 to 70%.
                                                    </Skill>
                                                    <Skill
                                                      name="storybook"
                                                    />
                                                    <Skill
                                                      name="sass"
                                                    />
                                                    <Skill
                                                      name="javascript"
                                                    />
                                                  </CenteredBlocks>
                                                </section>
                                                <section>
                                                  <h3>
                                                    What
                                                  </h3>
                                                  <p>
                                                    The three applications I worked on at Transavia were built with React and Redux. We created the component library using React, Storybook and an Azure registry with Artifacts
                                                  </p>
                                                </section>
                                              </React.Fragment>,
                                              "image": undefined,
                                              "label": "2018 - 2019: Transavia",
                                              "pathname": "/work/transavia",
                                              "title": "Transavia",
                                            },
                                            Object {
                                              "content": undefined,
                                              "image": undefined,
                                              "label": "2017: Stichting Herstelling",
                                              "pathname": "/work/stichting-herstelling",
                                              "title": "Stichting Herstelling",
                                            },
                                            Object {
                                              "content": <React.Fragment>
                                                <section>
                                                  <h2>
                                                    Go Fort
                                                  </h2>
                                                  <p>
                                                    This was a small side project that I've done for my father's company within a few days. I had been doing React for a few months, and I wanted to test my skills on this website. My brother created the logo, which I still think is pretty cool.
                                                  </p>
                                                </section>
                                                <section>
                                                  <CenteredBlocks>
                                                    <Skill
                                                      name="react"
                                                    />
                                                    <Skill
                                                      name="sass"
                                                    />
                                                    <Skill
                                                      name="javascript"
                                                    />
                                                  </CenteredBlocks>
                                                </section>
                                                <section>
                                                  <h3>
                                                    What
                                                  </h3>
                                                  <p>
                                                    I used create-react-app to setup the project (ejected for some reason). For the styling I used SASS.
                                                  </p>
                                                </section>
                                              </React.Fragment>,
                                              "image": undefined,
                                              "label": "2017: Go Fort",
                                              "pathname": "/work/go-fort",
                                              "title": "Go Fort",
                                            },
                                            Object {
                                              "content": <React.Fragment>
                                                <section>
                                                  <h2>
                                                    Wakoopa
                                                  </h2>
                                                  <p>
                                                    Wakoopa is an international software company focused on market research. The Wakoopa software is used by market research companies to measure online behavior. In 2015 I started at Wakoopa to do my internship and thesis, and afterwards I stayed two more years as a front-end developer.
                                                  </p>
                                                </section>
                                                <section>
                                                  <CenteredBlocks>
                                                    <Skill
                                                      name="react"
                                                    />
                                                    <Skill
                                                      name="react native"
                                                    />
                                                    <Skill
                                                      name="redux"
                                                    />
                                                    <Skill
                                                      name="jest"
                                                    />
                                                    <Skill
                                                      name="middleman"
                                                    />
                                                    <Skill
                                                      name="ember"
                                                    />
                                                    <Skill
                                                      name="storybook"
                                                    />
                                                  </CenteredBlocks>
                                                </section>
                                                <section>
                                                  <h3>
                                                    What
                                                  </h3>
                                                  <p>
                                                    My responsibilities were focused upon developing multiple web applications, websites and an iOS app (React Native). In this role I learned a lot about working with React, React Native, Middleman and Ember. Later I also got the responsibility to improve the UX and interface design of the management applications. I was working in a small team existing of front-end, back-end, UX and QA. The team was located in two locations: Amsterdam and Barcelona. Communication was important, so we had daily video calls. Front-end-wise we had a lot of freedom, so I learned a lot about different tools and techniques.
                                                  </p>
                                                </section>
                                              </React.Fragment>,
                                              "image": undefined,
                                              "label": "2015 - 2017: Wakoopa",
                                              "pathname": "/work/wakoopa",
                                              "title": "Wakoopa",
                                            },
                                            Object {
                                              "content": <React.Fragment>
                                                <section>
                                                  <h2>
                                                    Dinst
                                                  </h2>
                                                  <p>
                                                    Dinst was a social start-up focused on creating a platform for people who needed help at home. For instance, a carpenter could offer his/her services online, and anyone could get in contact for a task at home that needed fixing.
                                                  </p>
                                                  <p>
                                                    Working here was one of my first experiences as a front-end developer. It was a part-time job during my second and third year of university. The Dinst platform was built by themselves with Joomla, in which I continued to improve upon using JavaScript, CSS3 and PhP. Next to that, Dinst was trying to get investments by competing in a "Rockstart" acceleration program. I created wireframes, mock-ups and contributed to their cool ideas. Finally they won the program and gained investments!
                                                  </p>
                                                </section>
                                                <section>
                                                  <CenteredBlocks>
                                                    <Skill
                                                      name="css3"
                                                    />
                                                    <Skill
                                                      name="javascript"
                                                    />
                                                    <Skill
                                                      name="joomla"
                                                    />
                                                  </CenteredBlocks>
                                                </section>
                                                <section>
                                                  <p>
                                                    Unfortunately I had to move away from Dinst to continue my studies and start my internship elsewhere. Fortunately, my next challenge was at Wakoopa, where I learned so much more.
                                                  </p>
                                                </section>
                                              </React.Fragment>,
                                              "image": undefined,
                                              "label": "2014 - 2015: Dinst",
                                              "pathname": "/work/dinst",
                                              "title": "Dinst",
                                            },
                                          ]
                                        }
                                        toggleMenu={[Function]}
                                      >
                                        <styled.input
                                          checked={false}
                                          id="sub-menu-toggle"
                                          readOnly={true}
                                          type="checkbox"
                                        >
                                          <StyledComponent
                                            checked={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bxivhb",
                                                  "isStatic": true,
                                                  "lastClassName": "c11",
                                                  "rules": Array [
                                                    "
  display: none;

  &:checked + ",
                                                    ".c12",
                                                    " {
    opacity: 1;
    max-height: 20rem;
    padding: 1rem 1.5rem;
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.input",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bxivhb",
                                                "target": "input",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            id="sub-menu-toggle"
                                            readOnly={true}
                                            type="checkbox"
                                          >
                                            <input
                                              checked={false}
                                              className="c11"
                                              id="sub-menu-toggle"
                                              readOnly={true}
                                              type="checkbox"
                                            />
                                          </StyledComponent>
                                        </styled.input>
                                        <styled.div
                                          theme={
                                            Object {
                                              "hex": Object {
                                                "colorDark": "",
                                                "colorLight": "",
                                                "colorMutedDark": "",
                                                "colorMutedLight": "",
                                                "colorMutedRegular": "",
                                                "colorRegular": "",
                                              },
                                              "rgb": Object {
                                                "colorDark": "",
                                                "colorLight": "",
                                                "colorMutedDark": "",
                                                "colorMutedLight": "",
                                                "colorMutedRegular": "",
                                                "colorRegular": "",
                                              },
                                            }
                                          }
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "c12",
                                                  "isStatic": false,
                                                  "lastClassName": "c13",
                                                  "rules": Array [
                                                    "
  padding: 0 1.5rem;
  overflow: hidden;
  opacity: 0;
  display: flex;
  flex-direction: column;
  transition: background-color 1s, opacity .6s, max-height .6s, padding .6s;
  max-height: 0;
  background-color: rgba(",
                                                    [Function],
                                                    ", 0.2);

  a {
    text-decoration: none;
    margin: 0;
    padding: .5rem 1rem .5rem;
    font-size: 1rem;
    color: ",
                                                    "#A8A8A8",
                                                    ";

    @media (min-width: ",
                                                    "768px",
                                                    ") {
      font-size: 1.2rem;
    }
  }
",
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "c12",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            theme={
                                              Object {
                                                "hex": Object {
                                                  "colorDark": "",
                                                  "colorLight": "",
                                                  "colorMutedDark": "",
                                                  "colorMutedLight": "",
                                                  "colorMutedRegular": "",
                                                  "colorRegular": "",
                                                },
                                                "rgb": Object {
                                                  "colorDark": "",
                                                  "colorLight": "",
                                                  "colorMutedDark": "",
                                                  "colorMutedLight": "",
                                                  "colorMutedRegular": "",
                                                  "colorRegular": "",
                                                },
                                              }
                                            }
                                          >
                                            <div
                                              className="c12 c13"
                                            >
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="0"
                                                onClick={[Function]}
                                                to="/work/fontem-ventures"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/fontem-ventures"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/fontem-ventures"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/fontem-ventures"
                                                      onClick={[Function]}
                                                    >
                                                      2019: Fontem Ventures
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="1"
                                                onClick={[Function]}
                                                to="/work/battlefield-bus-tours"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/battlefield-bus-tours"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/battlefield-bus-tours"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/battlefield-bus-tours"
                                                      onClick={[Function]}
                                                    >
                                                      2019: Battlefield Bus Tours
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="2"
                                                onClick={[Function]}
                                                to="/work/transavia"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/transavia"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/transavia"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/transavia"
                                                      onClick={[Function]}
                                                    >
                                                      2018 - 2019: Transavia
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="3"
                                                onClick={[Function]}
                                                to="/work/stichting-herstelling"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/stichting-herstelling"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/stichting-herstelling"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/stichting-herstelling"
                                                      onClick={[Function]}
                                                    >
                                                      2017: Stichting Herstelling
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="4"
                                                onClick={[Function]}
                                                to="/work/go-fort"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/go-fort"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/go-fort"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/go-fort"
                                                      onClick={[Function]}
                                                    >
                                                      2017: Go Fort
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="5"
                                                onClick={[Function]}
                                                to="/work/wakoopa"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/wakoopa"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/wakoopa"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/wakoopa"
                                                      onClick={[Function]}
                                                    >
                                                      2015 - 2017: Wakoopa
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                              <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                exact={true}
                                                key="6"
                                                onClick={[Function]}
                                                to="/work/dinst"
                                              >
                                                <Route
                                                  exact={true}
                                                  path="\\\\/work\\\\/dinst"
                                                >
                                                  <Link
                                                    aria-current={null}
                                                    onClick={[Function]}
                                                    replace={false}
                                                    to="/work/dinst"
                                                  >
                                                    <a
                                                      aria-current={null}
                                                      href="#/work/dinst"
                                                      onClick={[Function]}
                                                    >
                                                      2014 - 2015: Dinst
                                                    </a>
                                                  </Link>
                                                </Route>
                                              </NavLink>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </SubNavigation>
                                    </div>
                                    <div
                                      key="3"
                                    >
                                      <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="main-link"
                                        data-test-id="main-menu-item-3"
                                        exact={false}
                                        onClick={[Function]}
                                        to="/contact"
                                      >
                                        <Route
                                          exact={false}
                                          path="\\\\/contact"
                                        >
                                          <Link
                                            aria-current={null}
                                            className="main-link"
                                            data-test-id="main-menu-item-3"
                                            onClick={[Function]}
                                            replace={false}
                                            to="/contact"
                                          >
                                            <a
                                              aria-current={null}
                                              className="main-link"
                                              data-test-id="main-menu-item-3"
                                              href="#/contact"
                                              onClick={[Function]}
                                            >
                                              <styled.div>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "c9",
                                                        "isStatic": true,
                                                        "lastClassName": "c10",
                                                        "rules": Array [
                                                          "
  transition: all .3s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  background-color: ",
                                                          "#E5E5E8",
                                                          ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                                          "768px",
                                                          ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "c9",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="c9 c10"
                                                  >
                                                    <WithStyles(Icon)>
                                                      <Icon
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiIcon-colorAction-4",
                                                            "colorDisabled": "MuiIcon-colorDisabled-6",
                                                            "colorError": "MuiIcon-colorError-5",
                                                            "colorPrimary": "MuiIcon-colorPrimary-2",
                                                            "colorSecondary": "MuiIcon-colorSecondary-3",
                                                            "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                            "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                            "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                            "root": "MuiIcon-root-1",
                                                          }
                                                        }
                                                        color="inherit"
                                                        component="span"
                                                        fontSize="default"
                                                      >
                                                        <span
                                                          aria-hidden="true"
                                                          className="material-icons MuiIcon-root-1"
                                                        >
                                                          chat
                                                        </span>
                                                      </Icon>
                                                    </WithStyles(Icon)>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                              <span>
                                                Contact
                                              </span>
                                            </a>
                                          </Link>
                                        </Route>
                                      </NavLink>
                                    </div>
                                  </nav>
                                </StyledComponent>
                              </styled.nav>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </main>
                    </StyledComponent>
                  </styled.main>
                </article>
              </StyledComponent>
            </styled.article>
          </Card>
        </StyledComponent>
      </Styled(Card)>
    </Navigation>
  </Router>
</HashRouter>
`;
