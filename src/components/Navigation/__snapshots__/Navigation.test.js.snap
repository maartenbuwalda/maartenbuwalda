// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation component mounts correctly 1`] = `
.c11 {
  padding: 0 1rem;
  overflow: hidden;
  opacity: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-transition: background-color 1s,opacity .6s,max-height .6s,padding .6s;
  transition: background-color 1s,opacity .6s,max-height .6s,padding .6s;
  max-height: 0;
  background-color: rgba(,0.2);
}

.c11 a {
  -webkit-transition: color .6s;
  transition: color .6s;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-family: 'Crete Round',serif;
  margin: 0;
  padding: .5rem 1rem .5rem;
  font-size: 1rem;
  color: #A8A8A8;
}

.c11 a.active {
  color: rgba(,0.7);
}

.c9 {
  display: none;
}

.c9:checked + .c10 {
  opacity: 1;
  max-height: 20rem;
  padding: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 1rem;
  width: 2rem;
  height: 2rem;
}

.c4 svg {
  width: 100%;
  height: 100%;
  fill: rgba(255,255,255,0.7);
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.c4 svg path[data-appear=true] {
  -webkit-transform: scaleY(1);
  -ms-transform: scaleY(1);
  transform: scaleY(1);
  opacity: 1;
}

.c0 {
  box-shadow: 0 1px 3px rgba(0,0,0,0.1),0 1px 2px rgba(0,0,0,0.1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c1 span {
  color: #ffffff;
}

.c8 {
  -webkit-transition: -webkit-transform .3s,background-color .6s;
  -webkit-transition: transform .3s,background-color .6s;
  transition: transform .3s,background-color .6s;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: rgba(255,255,255,0.7);
  -webkit-transform: translateX(-4rem) scaleX(0);
  -ms-transform: translateX(-4rem) scaleX(0);
  transform: translateX(-4rem) scaleX(0);
}

.c5 {
  background: #ffffff;
  overflow: hidden;
}

.c5 .main-link {
  font-family: 'Crete Round',serif;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 1rem;
  color: #A8A8A8;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: all .3s;
  transition: all .3s;
  margin: 0;
  width: 100%;
  -webkit-transition: all .3s;
  transition: all .3s;
}

.c5 .main-link > span {
  -webkit-transition: -webkit-transform .3s;
  -webkit-transition: transform .3s;
  transition: transform .3s;
  -webkit-transform: translateX(-2rem);
  -ms-transform: translateX(-2rem);
  transform: translateX(-2rem);
}

.c5 .main-link.active {
  color: rgba(,0.8);
  background-color: rgba(,0.2);
}

.c5 .main-link.active > span {
  -webkit-transform: translateX(1rem);
  -ms-transform: translateX(1rem);
  transform: translateX(1rem);
}

.c5 .main-link.active > .c7 {
  -webkit-transform: translateX(0rem);
  -ms-transform: translateX(0rem);
  transform: translateX(0rem);
}

.c3 > span {
  overflow: initial;
  font-size: 2rem;
  padding: 1rem;
}

.c6 {
  background: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: fixed;
  top: 0;
  min-height: 100vh;
  -webkit-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  transform: translateX(-100%);
  width: 100vw;
  -webkit-transition: all .3s;
  transition: all .3s;
  opacity: 0;
  z-index: -1;
}

.c6 .c2 {
  color: #A8A8A8;
  text-align: right;
}

@media (min-width:768px) {
  .c0 {
    box-shadow: none;
  }
}

@media (min-width:768px) {
  .c1 {
    display: none;
  }
}

@media (min-width:768px) {
  .c8 {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
}

@media (min-width:768px) {
  .c5 {
    padding: 0;
    position: initial;
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -webkit-align-items: flex-start;
    -webkit-box-align: flex-start;
    -ms-flex-align: flex-start;
    align-items: flex-start;
    box-shadow: none;
  }
}

@media (min-width:768px) {
  .c3 {
    display: none;
  }
}

@media (min-width:768px) {
  .c6 {
    width: 100%;
    -webkit-transform: initial;
    -ms-transform: initial;
    transform: initial;
    min-height: initial;
    height: initial;
    position: initial;
    opacity: initial;
    z-index: initial;
    box-shadow: none;
  }
}

<HashRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Navigation>
      <styled.nav>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dnqmqq",
                "isStatic": true,
                "lastClassName": "c0",
                "rules": Array [
                  "
  box-shadow: ",
                  "0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.1)",
                  ";

  @media (min-width: ",
                  "768px",
                  ") {
    box-shadow: none;
  }
",
                ],
              },
              "displayName": "styled.nav",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-dnqmqq",
              "target": "nav",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <nav
            className="c0"
          >
            <styled.div
              theme={
                Object {
                  "hex": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                  "rgb": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  display: flex;
  justify-content: space-between;
  background-color: ",
                        [Function],
                        ";

  span {
    color: ",
                        "#ffffff",
                        ";
  }

  @media (min-width: ",
                        "768px",
                        ") {
    display: none;
  }
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                theme={
                  Object {
                    "hex": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                    "rgb": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                  }
                }
              >
                <div
                  className="c1"
                >
                  <styled.label
                    data-test-id="open-menu-button"
                    onClick={[Function]}
                  >
                    <StyledComponent
                      data-test-id="open-menu-button"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c2",
                            "isStatic": true,
                            "lastClassName": "c3",
                            "rules": Array [
                              "
  > span {
    overflow: initial;
    font-size: 2rem;
    padding: 1rem;
  }
  
  @media (min-width: ",
                              "768px",
                              ") {
    display: none;
  }
",
                            ],
                          },
                          "displayName": "styled.label",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c2",
                          "target": "label",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                    >
                      <label
                        className="c2 c3"
                        data-test-id="open-menu-button"
                        onClick={[Function]}
                      >
                        <WithStyles(Icon)>
                          <Icon
                            classes={
                              Object {
                                "colorAction": "MuiIcon-colorAction-4",
                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                "colorError": "MuiIcon-colorError-5",
                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                "root": "MuiIcon-root-1",
                              }
                            }
                            color="inherit"
                            component="span"
                            fontSize="default"
                          >
                            <span
                              aria-hidden="true"
                              className="material-icons MuiIcon-root-1"
                            >
                              menu
                            </span>
                          </Icon>
                        </WithStyles(Icon)>
                      </label>
                    </StyledComponent>
                  </styled.label>
                  <Logo
                    size="2rem"
                    white={true}
                  >
                    <styled.div
                      size="2rem"
                      theme={
                        Object {
                          "hex": Object {
                            "colorDark": "",
                            "colorLight": "",
                            "colorMutedDark": "",
                            "colorMutedLight": "",
                            "colorMutedRegular": "",
                            "colorRegular": "",
                          },
                          "rgb": Object {
                            "colorDark": "",
                            "colorLight": "",
                            "colorMutedDark": "",
                            "colorMutedLight": "",
                            "colorMutedRegular": "",
                            "colorRegular": "",
                          },
                        }
                      }
                      white={true}
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-htpNat",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  width: ",
                                [Function],
                                ";
  height: ",
                                [Function],
                                ";

  svg {
    width: 100%;
    height: 100%;
    fill: ",
                                [Function],
                                ";
    transition: fill .3s;

    path {
      /* transition: all .3s;
      opacity: ",
                                [Function],
                                ";
      transform: scaleY(0.9); */

      &[data-appear=true] {
        transform: scaleY(1);
        opacity: 1;
      }
    }
  }
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-htpNat",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        size="2rem"
                        theme={
                          Object {
                            "hex": Object {
                              "colorDark": "",
                              "colorLight": "",
                              "colorMutedDark": "",
                              "colorMutedLight": "",
                              "colorMutedRegular": "",
                              "colorRegular": "",
                            },
                            "rgb": Object {
                              "colorDark": "",
                              "colorLight": "",
                              "colorMutedDark": "",
                              "colorMutedLight": "",
                              "colorMutedRegular": "",
                              "colorRegular": "",
                            },
                          }
                        }
                        white={true}
                      >
                        <div
                          className="c4"
                          size="2rem"
                        >
                          <svg
                            preserveAspectRatio="xMidYMid meet"
                            version="1.0"
                            viewBox="0 0 509.000000 509.000000"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="none"
                              transform="translate(0.000000,509.000000) scale(0.100000,-0.100000)"
                            >
                              <path
                                d="M2065 4954 c-269 -73 -507 -138 -527 -144 l-38 -11 0 -554 0 -555 150 0 150 0 0 435 c0 239 2 435 4 435 2 0 137 36 299 80 162 44 298 80 301 80 3 0 6 -49 6 -110 l0 -110 150 0 150 0 0 110 c0 61 3 110 8 110 7 0 381 -104 505 -141 l67 -20 0 -434 0 -435 150 0 150 0 0 554 c0 520 -1 555 -17 560 -150 45 -1005 286 -1010 285 -5 -1 -228 -61 -498 -135z"
                              />
                              <path
                                d="M700 3585 l0 -805 150 0 150 0 0 655 0 655 195 0 195 0 0 150 0 150 -345 0 -345 0 0 -805z"
                              />
                              <path
                                d="M1910 4240 l0 -150 635 0 635 0 0 150 0 150 -635 0 -635 0 0 -150z"
                              />
                              <path
                                d="M3700 4240 l0 -150 200 0 200 0 0 -655 0 -655 150 0 150 0 0 805 0 805 -350 0 -350 0 0 -150z"
                              />
                              <path
                                d="M2410 3835 l0 -145 150 0 150 0 0 145 0 145 -150 0 -150 0 0 -145z"
                              />
                              <path
                                d="M287 3573 c-2 -5 -68 -242 -147 -527 l-142 -519 144 -516 145 -516 151 -3 152 -3 0 150 0 150 -32 3 -32 3 -78 280 c-43 154 -78 283 -78 288 0 4 230 7 510 7 l510 0 0 150 0 150 -514 2 -513 3 82 300 82 300 32 3 31 3 0 150 0 149 -149 0 c-83 0 -152 -3 -154 -7z"
                              />
                              <path
                                d="M1110 3430 l0 -150 140 0 140 0 0 150 0 150 -140 0 -140 0 0 -150z"
                              />
                              <path
                                d="M1500 2740 l0 -840 150 0 150 0 0 690 0 690 305 0 305 0 0 -690 0 -690 150 0 150 0 0 685 0 685 290 0 290 0 0 -685 0 -685 150 0 150 0 0 840 0 840 -1045 0 -1045 0 0 -840z"
                              />
                              <path
                                d="M3700 3425 l0 -155 145 0 145 0 0 155 0 155 -145 0 -145 0 0 -155z"
                              />
                              <path
                                d="M4510 3430 l0 -150 24 0 c25 0 14 34 184 -592 4 -17 -25 -18 -507 -18 l-511 0 0 -150 0 -150 510 0 c281 0 510 -3 510 -8 0 -4 -36 -133 -80 -287 -44 -154 -80 -281 -80 -282 0 -2 -11 -3 -25 -3 l-25 0 0 -150 0 -150 145 0 144 0 10 38 c6 20 71 250 145 510 l134 473 -139 517 c-77 284 -142 525 -145 535 -5 15 -21 17 -150 17 l-144 0 0 -150z"
                              />
                              <path
                                d="M700 1470 l0 -790 345 0 345 0 0 155 0 155 -195 0 -195 0 0 635 0 635 -150 0 -150 0 0 -790z"
                              />
                              <path
                                d="M4100 1625 l0 -635 -200 0 -200 0 0 -150 0 -150 350 0 350 0 0 785 0 785 -150 0 -150 0 0 -635z"
                              />
                              <path
                                d="M1110 1640 l0 -150 268 0 c147 0 439 -3 650 -7 l382 -6 0 -189 0 -188 150 0 150 0 0 188 0 189 362 6 c199 4 487 7 640 7 l278 0 0 150 0 150 -1440 0 -1440 0 0 -150z"
                              />
                              <path
                                d="M1502 833 l3 -546 524 -144 524 -144 516 144 516 145 3 546 2 546 -150 0 -150 0 0 -425 0 -424 -67 -20 c-108 -32 -501 -141 -507 -141 -4 0 -6 47 -6 105 l0 105 -150 0 -149 0 -3 -108 -3 -109 -265 73 c-146 40 -282 78 -302 84 l-38 11 0 424 0 425 -150 0 -150 0 2 -547z"
                              />
                              <path
                                d="M1910 835 l0 -155 635 0 635 0 0 155 0 155 -635 0 -635 0 0 -155z"
                              />
                            </g>
                          </svg>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </Logo>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              theme={
                Object {
                  "hex": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                  "rgb": Object {
                    "colorDark": "",
                    "colorLight": "",
                    "colorMutedDark": "",
                    "colorMutedLight": "",
                    "colorMutedRegular": "",
                    "colorRegular": "",
                  },
                }
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gqjmRU",
                      "isStatic": false,
                      "lastClassName": "c5",
                      "rules": Array [
                        "
  background: ",
                        "#ffffff",
                        ";
  overflow: hidden;

  @media (min-width: ",
                        "768px",
                        ") {
    padding: 0;
    position: initial;
    justify-content: flex-start;
    align-items: flex-start;
    box-shadow: none;
  }
  
  .main-link {
    font-family: 'Crete Round', serif;
    text-decoration: none;
    font-size: 1rem;
    color: ",
                        "#A8A8A8",
                        ";
    display: flex;
    align-items: center;
    transition: all .3s;
    margin: 0;
    width: 100%;

    > span {
      transition: transform .3s;
      transform: translateX(-2rem);
    }

    transition: all .3s;

    &.active {
      color: rgba(",
                        [Function],
                        ", 0.8);
      background-color: rgba(",
                        [Function],
                        ", 0.2);

      > span {
        transform: translateX(1rem);
      }

      > ",
                        ".c7",
                        " {
        transform: translateX(0rem);
      }
    }
  }
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gqjmRU",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                theme={
                  Object {
                    "hex": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                    "rgb": Object {
                      "colorDark": "",
                      "colorLight": "",
                      "colorMutedDark": "",
                      "colorMutedLight": "",
                      "colorMutedRegular": "",
                      "colorRegular": "",
                    },
                  }
                }
              >
                <div
                  className="c5"
                >
                  <styled.div
                    isToggled={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-jTzLTM",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "
  background: ",
                              "#ffffff",
                              ";
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  min-height: 100vh;
  transform: translateX(-100%);
  width: 100vw;
  transition: all .3s;
  opacity: 0;
  z-index: -1;

  @media (max-width: ",
                              "768px",
                              ") {
    ",
                              [Function],
                              "
  }

  @media (min-width: ",
                              "768px",
                              ") {
    width: 100%;
    transform: initial;
    min-height: initial;
    height: initial;
    position: initial;
    opacity: initial;
    z-index: initial;
    box-shadow: none;
  }

  ",
                              ".c2",
                              " {
    color: ",
                              "#A8A8A8",
                              ";
    text-align: right;
  }
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-jTzLTM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isToggled={false}
                    >
                      <div
                        className="c6"
                      >
                        <styled.label
                          data-test-id="close-menu-button"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            data-test-id="close-menu-button"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "c2",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  > span {
    overflow: initial;
    font-size: 2rem;
    padding: 1rem;
  }
  
  @media (min-width: ",
                                    "768px",
                                    ") {
    display: none;
  }
",
                                  ],
                                },
                                "displayName": "styled.label",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "c2",
                                "target": "label",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            onClick={[Function]}
                          >
                            <label
                              className="c2 c3"
                              data-test-id="close-menu-button"
                              onClick={[Function]}
                            >
                              <WithStyles(Icon)>
                                <Icon
                                  classes={
                                    Object {
                                      "colorAction": "MuiIcon-colorAction-4",
                                      "colorDisabled": "MuiIcon-colorDisabled-6",
                                      "colorError": "MuiIcon-colorError-5",
                                      "colorPrimary": "MuiIcon-colorPrimary-2",
                                      "colorSecondary": "MuiIcon-colorSecondary-3",
                                      "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                      "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                      "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                      "root": "MuiIcon-root-1",
                                    }
                                  }
                                  color="inherit"
                                  component="span"
                                  fontSize="default"
                                >
                                  <span
                                    aria-hidden="true"
                                    className="material-icons MuiIcon-root-1"
                                  >
                                    close
                                  </span>
                                </Icon>
                              </WithStyles(Icon)>
                            </label>
                          </StyledComponent>
                        </styled.label>
                        <div
                          key="0"
                        >
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="main-link"
                            data-test-id="main-menu-item-0"
                            exact={true}
                            onClick={[Function]}
                            to="/"
                          >
                            <Route
                              exact={true}
                              path="\\\\/"
                            >
                              <Link
                                aria-current="page"
                                className="main-link active"
                                data-test-id="main-menu-item-0"
                                onClick={[Function]}
                                replace={false}
                                style={Object {}}
                                to="/"
                              >
                                <a
                                  aria-current="page"
                                  className="main-link active"
                                  data-test-id="main-menu-item-0"
                                  href="#/"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <styled.div
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  transition: transform .3s, background-color .6s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: ",
                                              "rgba(255, 255, 255, 0.7)",
                                              ";
  background-color: ",
                                              [Function],
                                              ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                              "768px",
                                              ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      theme={
                                        Object {
                                          "hex": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                          "rgb": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="c7 c8"
                                      >
                                        <WithStyles(Icon)>
                                          <Icon
                                            classes={
                                              Object {
                                                "colorAction": "MuiIcon-colorAction-4",
                                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                                "colorError": "MuiIcon-colorError-5",
                                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                "root": "MuiIcon-root-1",
                                              }
                                            }
                                            color="inherit"
                                            component="span"
                                            fontSize="default"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="material-icons MuiIcon-root-1"
                                            >
                                              child_care
                                            </span>
                                          </Icon>
                                        </WithStyles(Icon)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <span>
                                    About me
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                        </div>
                        <div
                          key="1"
                        >
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="main-link"
                            data-test-id="main-menu-item-1"
                            exact={false}
                            onClick={[Function]}
                            to="/education"
                          >
                            <Route
                              exact={false}
                              path="\\\\/education"
                            >
                              <Link
                                aria-current={null}
                                className="main-link"
                                data-test-id="main-menu-item-1"
                                onClick={[Function]}
                                replace={false}
                                to="/education"
                              >
                                <a
                                  aria-current={null}
                                  className="main-link"
                                  data-test-id="main-menu-item-1"
                                  href="#/education"
                                  onClick={[Function]}
                                >
                                  <styled.div
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  transition: transform .3s, background-color .6s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: ",
                                              "rgba(255, 255, 255, 0.7)",
                                              ";
  background-color: ",
                                              [Function],
                                              ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                              "768px",
                                              ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      theme={
                                        Object {
                                          "hex": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                          "rgb": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="c7 c8"
                                      >
                                        <WithStyles(Icon)>
                                          <Icon
                                            classes={
                                              Object {
                                                "colorAction": "MuiIcon-colorAction-4",
                                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                                "colorError": "MuiIcon-colorError-5",
                                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                "root": "MuiIcon-root-1",
                                              }
                                            }
                                            color="inherit"
                                            component="span"
                                            fontSize="default"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="material-icons MuiIcon-root-1"
                                            >
                                              local_library
                                            </span>
                                          </Icon>
                                        </WithStyles(Icon)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <span>
                                    Education
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                        </div>
                        <div
                          key="2"
                        >
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="main-link"
                            data-test-id="main-menu-item-2"
                            exact={false}
                            onClick={[Function]}
                            to="/work"
                          >
                            <Route
                              exact={false}
                              path="\\\\/work"
                            >
                              <Link
                                aria-current={null}
                                className="main-link"
                                data-test-id="main-menu-item-2"
                                onClick={[Function]}
                                replace={false}
                                to="/work"
                              >
                                <a
                                  aria-current={null}
                                  className="main-link"
                                  data-test-id="main-menu-item-2"
                                  href="#/work"
                                  onClick={[Function]}
                                >
                                  <styled.div
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  transition: transform .3s, background-color .6s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: ",
                                              "rgba(255, 255, 255, 0.7)",
                                              ";
  background-color: ",
                                              [Function],
                                              ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                              "768px",
                                              ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      theme={
                                        Object {
                                          "hex": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                          "rgb": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="c7 c8"
                                      >
                                        <WithStyles(Icon)>
                                          <Icon
                                            classes={
                                              Object {
                                                "colorAction": "MuiIcon-colorAction-4",
                                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                                "colorError": "MuiIcon-colorError-5",
                                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                "root": "MuiIcon-root-1",
                                              }
                                            }
                                            color="inherit"
                                            component="span"
                                            fontSize="default"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="material-icons MuiIcon-root-1"
                                            >
                                              code
                                            </span>
                                          </Icon>
                                        </WithStyles(Icon)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <span>
                                    Work
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                          <SubNavigation
                            isToggled={false}
                            links={
                              Array [
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Fontem Ventures
                                      </h1>
                                      <Tags
                                        inverted={true}
                                        list={
                                          Array [
                                            "2019-now",
                                            "project-based",
                                          ]
                                        }
                                      />
                                      <p>
                                        Fontem is part of Imperial Tobacco. Its main product is 
                                        <a
                                          href="https://www.blu.com"
                                          rel="noopener noreferrer"
                                          target="_blank"
                                        >
                                          blu
                                        </a>
                                        , a vaping device. Since march 2019 I've been working for them as part of the "acceleration program". This program is focused on refactoring and improving the website, which ultimately leads to an increase of the traffic and other KPIs. The "legacy" stack exists of React, Styled Components and Gatsby. The new stack will be: React, Styled Components, TypeScript and Next.js.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I'm using and learning here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="typescript"
                                        />
                                        <Skill
                                          name="jest"
                                        />
                                        <Skill
                                          name="node"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                        <Skill
                                          name="next"
                                        />
                                        <Skill
                                          name="styled components"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                    <section>
                                      <h3>
                                        My role
                                      </h3>
                                      <p>
                                        The acceleration program works in a very start-up way, which means that my role has been very flexible. I started out by having responsibility over forms on the website, like registration and login. After this was mostly done, I switched to SEO. I expect to be doing many different things for this project and learn a lot.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I'm working on:
                                      </h3>
                                      <ul>
                                        <li>
                                          <h4>
                                            Website re-platform
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Typescript",
                                                "Jest",
                                                "Next.js",
                                                "styled-components",
                                              ]
                                            }
                                          />
                                          <p>
                                            Part of my job here at Fontem is to refactor existing pages from JavaScript to TypeScript. Some pages are coming from tools like DemandWare, and these pages need to be built from scratch. Doing this, I am learning more about TypeScript, which I never used before this project.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            SEO
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "Node",
                                                "Next.js",
                                              ]
                                            }
                                          />
                                          <p>
                                            Another important part of the big refactor is to improve the SEO, which is now my main focus. Like TypeScript, I have never really focused that much on this subject, so I am happy and eager to learn about this.
                                          </p>
                                        </li>
                                      </ul>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2019 - now: Fontem Ventures",
                                  "pathname": "/work/fontem-ventures",
                                  "title": "Fontem Ventures",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Transavia
                                      </h1>
                                      <Tags
                                        inverted={true}
                                        list={
                                          Array [
                                            "2018-2019",
                                            "project-based",
                                          ]
                                        }
                                      />
                                      <p>
                                        Transavia is a Dutch low-cost airline, focused on having the best online experience. Transavia's stack has been focused around Sitecore for many years, and one of their steps forward was to move their front-end stack towards React and have a more API based architecture.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I used here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="redux"
                                        />
                                        <Skill
                                          name="jest"
                                        />
                                        <Skill
                                          name="storybook"
                                        />
                                        <Skill
                                          name="sass"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                    <section>
                                      <h3>
                                        My role
                                      </h3>
                                      <p>
                                        I came to work at Transavia as the first React developer. They already made a proof of concept to move their stack to React, and I was here to continue and improve their work. Most of my time at Transavia was spent on adding new features, refactoring, removing codesmells and bugs, and increasing code coverage. Next to that, I had a substantial role in setting up two new React + Redux applications and a component library. Of course part of the job was also to fix bugs in the existing website (transavia.com).
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I worked on:
                                      </h3>
                                      <ul>
                                        <li>
                                          <h4>
                                            Group Offer Solution
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Redux",
                                                "Jest",
                                              ]
                                            }
                                          />
                                          <p>
                                            Transavia's first React application, built as a proof of concept and refactored by me to increase the quality for production. I also raised the code coverage from 0% to 70%, and added Redux for state management before going to production in early 2019.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Cancel booking
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Redux",
                                                "Jest",
                                              ]
                                            }
                                          />
                                          <p>
                                            I built this small application which enables users to more easily cancel their booking. This app is being served as a page within the existing website. It fetches and displays some flight info, and does the request to cancel the booking upon confirmation.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Partner Platform
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                              ]
                                            }
                                          />
                                          <p>
                                            A first setup of connecting and combining all existing partner (B2B) applications, which are built with different stacks. The goal is to move all these applications to the same stack.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            TFS Component Library
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Storybook",
                                                "Lerna",
                                                "Azure",
                                              ]
                                            }
                                          />
                                          <p>
                                            We built this component library with React, Storybook, Lerna and Azure registry with Artifacts. Its purpose is to provide reusable, tested front-end components which will make it easier to build and unite the front-end stack of the Transavia applications.
                                          </p>
                                        </li>
                                      </ul>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2018 - 2019: Transavia",
                                  "pathname": "/work/transavia",
                                  "title": "Transavia",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Wakoopa
                                      </h1>
                                      <Tags
                                        inverted={true}
                                        list={
                                          Array [
                                            "2015-2017",
                                          ]
                                        }
                                      />
                                      <p>
                                        <Link
                                          href="http://www.wakoopa.com"
                                        >
                                          Wakoopa
                                        </Link>
                                         is an international software company focused on market research. The Wakoopa software is used by market research companies to measure online behavior. In 2015 I started at Wakoopa to do my internship and thesis, and afterwards I stayed two more years as a front-end developer.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I used here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="react native"
                                        />
                                        <Skill
                                          name="redux"
                                        />
                                        <Skill
                                          name="jest"
                                        />
                                        <Skill
                                          name="middleman"
                                        />
                                        <Skill
                                          name="ember"
                                        />
                                        <Skill
                                          name="storybook"
                                        />
                                        <Skill
                                          name="d3"
                                        />
                                        <Skill
                                          name="styled components"
                                        />
                                        <Skill
                                          name="sketch"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                    <section>
                                      <h3>
                                        My role
                                      </h3>
                                      <p>
                                        My responsibilities were focused upon developing multiple web applications (Ember and React) and an iOS app (React Native). Each of these applications were connected to Ruby on Rails APIs. The team I was working with included front-end, back-end, UX and QA. In a later stage, I also picked up some responsibilities to improve the designs of existing interfaces.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I worked on:
                                      </h3>
                                      <ul>
                                        <li>
                                          <h4>
                                            Rosalina
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "Ember",
                                              ]
                                            }
                                          />
                                          <p>
                                            A panel management tool built with Ember. I got to work on this since the start of my internship, and later made a redesign for it. I learned Ember and added multiple feature to this application.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Bowser
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Redux",
                                                "Jest",
                                              ]
                                            }
                                          />
                                          <p>
                                            A browser plugin which helps to install the tracking software into the browser. I built its front-end with React + Redux, and unit tested with Jest.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Conker
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React Native",
                                                "Redux",
                                                "Jest",
                                              ]
                                            }
                                          />
                                          <p>
                                            A React Native + Redux application which helps the user to install the tracking software on an iOS device. I worked on this project in the early days of React Native, so it was a lot of experimenting and refactoring. Eventually it was a nice and small application, fully tested with Jest.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Wart (protip: do not Google this word)
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Storybook",
                                              ]
                                            }
                                          />
                                          <p>
                                            A React component library using Storybook. We created this library so we could more easily build React applications, and refactor existing apps to the React stack.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Menno
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "React",
                                                "Redux",
                                                "styled-components",
                                                "D3",
                                                "Dialogflow",
                                              ]
                                            }
                                          />
                                          <p>
                                            A chatbot type application which enables the user/client to access market research data. I built this app with React + Redux, D3, Styled-Components and Dialogflow.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            Wakoopa's behavioral data conference websites
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "Middleman",
                                                "SASS",
                                              ]
                                            }
                                          />
                                          <p>
                                            Wakoopa organized world's first behavioral data conference, and I got to make its website. The preceding day, they also organized a datathon and its winners were invited to present their work on the conference. I created websites for both events using Middleman and SASS.
                                          </p>
                                        </li>
                                        <li>
                                          <h4>
                                            My thesis
                                          </h4>
                                          <Tags
                                            list={
                                              Array [
                                                "Sketch",
                                                "D3",
                                              ]
                                            }
                                          />
                                          <p>
                                            My thesis was focused on designing a dashboard that would automate and display data involving the UX of the Wakoopa products. To do so, I did a lot of research on dashboard design, about what needed to be measured and finally I created a complete design. Unfortunately I was never able to build the dashboard. However, my learnings about dashboard design might someday come in handy.
                                          </p>
                                        </li>
                                      </ul>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2015 - 2017: Wakoopa",
                                  "pathname": "/work/wakoopa",
                                  "title": "Wakoopa",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Dinst
                                      </h1>
                                      <Tags
                                        inverted={true}
                                        list={
                                          Array [
                                            "2014-2015",
                                          ]
                                        }
                                      />
                                      <p>
                                        Dinst was a social start-up focused on creating a platform for people who needed help at home. For instance, a carpenter could offer his/her services online, and anyone could get in contact for a task at home that needed fixing.
                                      </p>
                                    </section>
                                    <section>
                                      <CenteredBlocks>
                                        <Skill
                                          name="css3"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                        <Skill
                                          name="joomla"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                    <section>
                                      <h3>
                                        My role
                                      </h3>
                                      <p>
                                        Working here was one of my first experiences as a front-end developer. It was a part-time job during my second and third year of university. Dinst was a young start-up, which meant my role was very broad. The Dinst platform was built by themselves with Joomla, on which I continued to improve using JavaScript, HTML5 and CSS3. Dinst was also trying to get investments by competing in a "Rockstart" acceleration program. I created wireframes, design mock-ups and contributed to their cool ideas. Finally they won the program and gained investments!
                                      </p>
                                      <p>
                                        Unfortunately after 1.5 years I had to move away from Dinst to continue my studies and start my internship elsewhere.
                                      </p>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2014 - 2015: Dinst",
                                  "pathname": "/work/dinst",
                                  "title": "Dinst",
                                },
                              ]
                            }
                            toggleMenu={[Function]}
                          >
                            <styled.input
                              checked={false}
                              id="sub-menu-toggle"
                              readOnly={true}
                              type="checkbox"
                            >
                              <StyledComponent
                                checked={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": true,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: none;

  &:checked + ",
                                        ".c10",
                                        " {
    opacity: 1;
    max-height: 20rem;
    padding: 1rem;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.input",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="sub-menu-toggle"
                                readOnly={true}
                                type="checkbox"
                              >
                                <input
                                  checked={false}
                                  className="c9"
                                  id="sub-menu-toggle"
                                  readOnly={true}
                                  type="checkbox"
                                />
                              </StyledComponent>
                            </styled.input>
                            <styled.div
                              theme={
                                Object {
                                  "hex": Object {
                                    "colorDark": "",
                                    "colorLight": "",
                                    "colorMutedDark": "",
                                    "colorMutedLight": "",
                                    "colorMutedRegular": "",
                                    "colorRegular": "",
                                  },
                                  "rgb": Object {
                                    "colorDark": "",
                                    "colorLight": "",
                                    "colorMutedDark": "",
                                    "colorMutedLight": "",
                                    "colorMutedRegular": "",
                                    "colorRegular": "",
                                  },
                                }
                              }
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c10",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding: 0 1rem;
  overflow: hidden;
  opacity: 0;
  display: flex;
  flex-direction: column;
  transition: background-color 1s, opacity .6s, max-height .6s, padding .6s;
  max-height: 0;
  background-color: rgba(",
                                        [Function],
                                        ", 0.2);

  a {
    transition: color .6s;
    text-decoration: none;
    font-family: 'Crete Round', serif;
    margin: 0;
    padding: .5rem 1rem .5rem;
    font-size: 1rem;
    color: ",
                                        "#A8A8A8",
                                        ";

    &.active {
      color: rgba(",
                                        [Function],
                                        ", 0.7);
    }

    /* @media (min-width: ",
                                        "768px",
                                        ") {
      font-size: 1.2rem;
    } */
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c10",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                theme={
                                  Object {
                                    "hex": Object {
                                      "colorDark": "",
                                      "colorLight": "",
                                      "colorMutedDark": "",
                                      "colorMutedLight": "",
                                      "colorMutedRegular": "",
                                      "colorRegular": "",
                                    },
                                    "rgb": Object {
                                      "colorDark": "",
                                      "colorLight": "",
                                      "colorMutedDark": "",
                                      "colorMutedLight": "",
                                      "colorMutedRegular": "",
                                      "colorRegular": "",
                                    },
                                  }
                                }
                              >
                                <div
                                  className="c10 c11"
                                >
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="0"
                                    onClick={[Function]}
                                    to="/work/fontem-ventures"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/work\\\\/fontem-ventures"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/work/fontem-ventures"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/work/fontem-ventures"
                                          onClick={[Function]}
                                        >
                                          2019 - now: Fontem Ventures
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="1"
                                    onClick={[Function]}
                                    to="/work/transavia"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/work\\\\/transavia"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/work/transavia"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/work/transavia"
                                          onClick={[Function]}
                                        >
                                          2018 - 2019: Transavia
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="2"
                                    onClick={[Function]}
                                    to="/work/wakoopa"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/work\\\\/wakoopa"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/work/wakoopa"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/work/wakoopa"
                                          onClick={[Function]}
                                        >
                                          2015 - 2017: Wakoopa
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="3"
                                    onClick={[Function]}
                                    to="/work/dinst"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/work\\\\/dinst"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/work/dinst"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/work/dinst"
                                          onClick={[Function]}
                                        >
                                          2014 - 2015: Dinst
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </SubNavigation>
                        </div>
                        <div
                          key="3"
                        >
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="main-link"
                            data-test-id="main-menu-item-3"
                            exact={false}
                            onClick={[Function]}
                            to="/side-projects"
                          >
                            <Route
                              exact={false}
                              path="\\\\/side-projects"
                            >
                              <Link
                                aria-current={null}
                                className="main-link"
                                data-test-id="main-menu-item-3"
                                onClick={[Function]}
                                replace={false}
                                to="/side-projects"
                              >
                                <a
                                  aria-current={null}
                                  className="main-link"
                                  data-test-id="main-menu-item-3"
                                  href="#/side-projects"
                                  onClick={[Function]}
                                >
                                  <styled.div
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  transition: transform .3s, background-color .6s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: ",
                                              "rgba(255, 255, 255, 0.7)",
                                              ";
  background-color: ",
                                              [Function],
                                              ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                              "768px",
                                              ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      theme={
                                        Object {
                                          "hex": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                          "rgb": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="c7 c8"
                                      >
                                        <WithStyles(Icon)>
                                          <Icon
                                            classes={
                                              Object {
                                                "colorAction": "MuiIcon-colorAction-4",
                                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                                "colorError": "MuiIcon-colorError-5",
                                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                "root": "MuiIcon-root-1",
                                              }
                                            }
                                            color="inherit"
                                            component="span"
                                            fontSize="default"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="material-icons MuiIcon-root-1"
                                            >
                                              assignment
                                            </span>
                                          </Icon>
                                        </WithStyles(Icon)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <span>
                                    Side projects
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                          <SubNavigation
                            isToggled={false}
                            links={
                              Array [
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Battlefield Bus Tours
                                      </h1>
                                      <p>
                                        <Link
                                          href="http://www.battlefieldbustours.nl"
                                        >
                                          BBT
                                        </Link>
                                         is a touring company which travels to WW2 sites such as Normandy, the Ardennes and Auschwitz. This company is owned and ran by my girlfriend. I've made improvements to her existing, self-made WordPress website, but I next to that I'm building a new website from scratch.
                                      </p>
                                    </section>
                                    <section>
                                      <CenteredBlocks>
                                        <Skill
                                          name="gatsby"
                                        />
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                        <Skill
                                          name="css3"
                                        />
                                        <Skill
                                          name="html5"
                                        />
                                        <Skill
                                          name="wordpress"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                    <section>
                                      <h3>
                                        What
                                      </h3>
                                      <p>
                                        I am using Gatsby as a static site generator, so I can optimize the SEO. This also enables the use of React. This website is still in progress, but you can check out my progress 
                                        <Link
                                          href="https://github.com/maartenbuwalda/battlefieldbustours"
                                        >
                                          here
                                        </Link>
                                        .
                                      </p>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2018 - 2019: Battlefield Bus Tours",
                                  "pathname": "/side-projects/battlefield-bus-tours",
                                  "title": "Battlefield Bus Tours",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        My own website
                                      </h1>
                                      <p>
                                        I made this very website to play around and try some things I didn't get the chance to try before. At the start, I mostly wanted to learn more about setting up my own Webpack project and optimize it. I wanted to use React hooks and React Context, which handles all the dynamic colors based on the dominant colors from the image at the top. Next to that, I used Styled-Components and some more Jest to increase my testing skills, although the components are very simple. Check it out 
                                        <Link
                                          href="https://github.com/maartenbuwalda/maartenbuwalda"
                                        >
                                          here
                                        </Link>
                                        .
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I used here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="jest"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                        <Skill
                                          name="styled components"
                                        />
                                        <Skill
                                          name="webpack"
                                        />
                                        <Skill
                                          name="node"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2019: This website",
                                  "pathname": "/side-projects/this-website",
                                  "title": "This website",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Stichting Herstelling
                                      </h1>
                                      <p>
                                        <Link
                                          href="http://www.herstelling.nl"
                                        >
                                          Herstelling
                                        </Link>
                                         is a foundation which helps (semi criminal) people back into society. My father started working here when he retired from the marines, and I got the priviledge to renew their website. It used to be an old WordPress website, and I replaced it by building a new website from scratch.
                                      </p>
                                      <p>
                                        I used Middleman as static site generator. I also used Middleman because I wanted to easily reuse pieces of code, and the website had to be optimized for search engines.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I used here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="middleman"
                                        />
                                        <Skill
                                          name="sass"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2017: Stichting Herstelling",
                                  "pathname": "/side-projects/stichting-herstelling",
                                  "title": "Stichting Herstelling",
                                },
                                Object {
                                  "content": <React.Fragment>
                                    <section>
                                      <h1>
                                        Go Fort
                                      </h1>
                                      <p>
                                        <Link
                                          href="http://www.go-fort.nl"
                                        >
                                          This
                                        </Link>
                                         was a small side project that I've done for my father's company. I had been doing React for a few months, and I wanted to test my skills on this website. My brother created the logo, which I still think is pretty cool.
                                      </p>
                                      <p>
                                        I used create-react-app to setup the project (I ejected it, for some reason). For the styling I used SASS.
                                      </p>
                                    </section>
                                    <section>
                                      <h3>
                                        What I used here:
                                      </h3>
                                      <CenteredBlocks>
                                        <Skill
                                          name="react"
                                        />
                                        <Skill
                                          name="sass"
                                        />
                                        <Skill
                                          name="javascript"
                                        />
                                      </CenteredBlocks>
                                    </section>
                                  </React.Fragment>,
                                  "image": undefined,
                                  "label": "2017: Go Fort",
                                  "pathname": "/side-projects/go-fort",
                                  "title": "Go Fort",
                                },
                              ]
                            }
                            toggleMenu={[Function]}
                          >
                            <styled.input
                              checked={false}
                              id="sub-menu-toggle"
                              readOnly={true}
                              type="checkbox"
                            >
                              <StyledComponent
                                checked={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bwzfXH",
                                      "isStatic": true,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: none;

  &:checked + ",
                                        ".c10",
                                        " {
    opacity: 1;
    max-height: 20rem;
    padding: 1rem;
  }
",
                                      ],
                                    },
                                    "displayName": "styled.input",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bwzfXH",
                                    "target": "input",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                id="sub-menu-toggle"
                                readOnly={true}
                                type="checkbox"
                              >
                                <input
                                  checked={false}
                                  className="c9"
                                  id="sub-menu-toggle"
                                  readOnly={true}
                                  type="checkbox"
                                />
                              </StyledComponent>
                            </styled.input>
                            <styled.div
                              theme={
                                Object {
                                  "hex": Object {
                                    "colorDark": "",
                                    "colorLight": "",
                                    "colorMutedDark": "",
                                    "colorMutedLight": "",
                                    "colorMutedRegular": "",
                                    "colorRegular": "",
                                  },
                                  "rgb": Object {
                                    "colorDark": "",
                                    "colorLight": "",
                                    "colorMutedDark": "",
                                    "colorMutedLight": "",
                                    "colorMutedRegular": "",
                                    "colorRegular": "",
                                  },
                                }
                              }
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c10",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding: 0 1rem;
  overflow: hidden;
  opacity: 0;
  display: flex;
  flex-direction: column;
  transition: background-color 1s, opacity .6s, max-height .6s, padding .6s;
  max-height: 0;
  background-color: rgba(",
                                        [Function],
                                        ", 0.2);

  a {
    transition: color .6s;
    text-decoration: none;
    font-family: 'Crete Round', serif;
    margin: 0;
    padding: .5rem 1rem .5rem;
    font-size: 1rem;
    color: ",
                                        "#A8A8A8",
                                        ";

    &.active {
      color: rgba(",
                                        [Function],
                                        ", 0.7);
    }

    /* @media (min-width: ",
                                        "768px",
                                        ") {
      font-size: 1.2rem;
    } */
  }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c10",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                theme={
                                  Object {
                                    "hex": Object {
                                      "colorDark": "",
                                      "colorLight": "",
                                      "colorMutedDark": "",
                                      "colorMutedLight": "",
                                      "colorMutedRegular": "",
                                      "colorRegular": "",
                                    },
                                    "rgb": Object {
                                      "colorDark": "",
                                      "colorLight": "",
                                      "colorMutedDark": "",
                                      "colorMutedLight": "",
                                      "colorMutedRegular": "",
                                      "colorRegular": "",
                                    },
                                  }
                                }
                              >
                                <div
                                  className="c10 c11"
                                >
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="0"
                                    onClick={[Function]}
                                    to="/side-projects/battlefield-bus-tours"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/side-projects\\\\/battlefield-bus-tours"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/side-projects/battlefield-bus-tours"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/side-projects/battlefield-bus-tours"
                                          onClick={[Function]}
                                        >
                                          2018 - 2019: Battlefield Bus Tours
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="1"
                                    onClick={[Function]}
                                    to="/side-projects/this-website"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/side-projects\\\\/this-website"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/side-projects/this-website"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/side-projects/this-website"
                                          onClick={[Function]}
                                        >
                                          2019: This website
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="2"
                                    onClick={[Function]}
                                    to="/side-projects/stichting-herstelling"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/side-projects\\\\/stichting-herstelling"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/side-projects/stichting-herstelling"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/side-projects/stichting-herstelling"
                                          onClick={[Function]}
                                        >
                                          2017: Stichting Herstelling
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    exact={true}
                                    key="3"
                                    onClick={[Function]}
                                    to="/side-projects/go-fort"
                                  >
                                    <Route
                                      exact={true}
                                      path="\\\\/side-projects\\\\/go-fort"
                                    >
                                      <Link
                                        aria-current={null}
                                        onClick={[Function]}
                                        replace={false}
                                        to="/side-projects/go-fort"
                                      >
                                        <a
                                          aria-current={null}
                                          href="#/side-projects/go-fort"
                                          onClick={[Function]}
                                        >
                                          2017: Go Fort
                                        </a>
                                      </Link>
                                    </Route>
                                  </NavLink>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </SubNavigation>
                        </div>
                        <div
                          key="4"
                        >
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="main-link"
                            data-test-id="main-menu-item-4"
                            exact={false}
                            onClick={[Function]}
                            to="/contact"
                          >
                            <Route
                              exact={false}
                              path="\\\\/contact"
                            >
                              <Link
                                aria-current={null}
                                className="main-link"
                                data-test-id="main-menu-item-4"
                                onClick={[Function]}
                                replace={false}
                                to="/contact"
                              >
                                <a
                                  aria-current={null}
                                  className="main-link"
                                  data-test-id="main-menu-item-4"
                                  href="#/contact"
                                  onClick={[Function]}
                                >
                                  <styled.div
                                    theme={
                                      Object {
                                        "hex": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                        "rgb": Object {
                                          "colorDark": "",
                                          "colorLight": "",
                                          "colorMutedDark": "",
                                          "colorMutedLight": "",
                                          "colorMutedRegular": "",
                                          "colorRegular": "",
                                        },
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "c7",
                                            "isStatic": false,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "
  transition: transform .3s, background-color .6s;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  padding: 1rem;
  color: ",
                                              "rgba(255, 255, 255, 0.7)",
                                              ";
  background-color: ",
                                              [Function],
                                              ";
  transform: translateX(-4rem) scaleX(0);
  
  @media (min-width: ",
                                              "768px",
                                              ") {
    width: 1rem;
    height: 1rem;
    padding: 1rem;
  }
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "c7",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      theme={
                                        Object {
                                          "hex": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                          "rgb": Object {
                                            "colorDark": "",
                                            "colorLight": "",
                                            "colorMutedDark": "",
                                            "colorMutedLight": "",
                                            "colorMutedRegular": "",
                                            "colorRegular": "",
                                          },
                                        }
                                      }
                                    >
                                      <div
                                        className="c7 c8"
                                      >
                                        <WithStyles(Icon)>
                                          <Icon
                                            classes={
                                              Object {
                                                "colorAction": "MuiIcon-colorAction-4",
                                                "colorDisabled": "MuiIcon-colorDisabled-6",
                                                "colorError": "MuiIcon-colorError-5",
                                                "colorPrimary": "MuiIcon-colorPrimary-2",
                                                "colorSecondary": "MuiIcon-colorSecondary-3",
                                                "fontSizeInherit": "MuiIcon-fontSizeInherit-7",
                                                "fontSizeLarge": "MuiIcon-fontSizeLarge-9",
                                                "fontSizeSmall": "MuiIcon-fontSizeSmall-8",
                                                "root": "MuiIcon-root-1",
                                              }
                                            }
                                            color="inherit"
                                            component="span"
                                            fontSize="default"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="material-icons MuiIcon-root-1"
                                            >
                                              chat
                                            </span>
                                          </Icon>
                                        </WithStyles(Icon)>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <span>
                                    Contact
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </nav>
        </StyledComponent>
      </styled.nav>
    </Navigation>
  </Router>
</HashRouter>
`;
